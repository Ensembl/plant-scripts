#!/bin/bash

# Protocol to run the Pan Compara pipeline
# 
# The supported Compara documentation is 
# https://www.ebi.ac.uk/seqdb/confluence/display/EnsCom/Construction+of+the+release+database
#
# However, there is still less update EG documentation which cover Pan explicitely, 
# which ocasionally suggest different recipes:
# https://www.ebi.ac.uk/seqdb/confluence/display/EnsGen/Pan+Compara+production
# https://www.ebi.ac.uk/seqdb/confluence/display/EnsGen/Peptide+Compara+pipeline
# https://www.ebi.ac.uk/seqdb/confluence/display/EnsCom/Merge+the+homology+pipelines

# by Bruno Contreras Moreira EMBL-EBI 2019 with help from the Compara team and Nishadi

# recommended as this pipeline might weeks to run
screen -S compara-${USER}

# NOTE: release version of core databases, not ensembl-compara's version
ENS_VERSION=97
EG_VERSION=$(echo $ENS_VERSION-53 | bc)

ensetup $ENS_VERSION
comparasetup $ENS_VERSION

export LSB_DEFAULTQUEUE=production-rh74

HIVE_CMD=mysql-ens-hive-prod-2-ensrw
HIVE_URL=$(${HIVE_CMD} details url)
MEMBER_URL=${HIVE_URL}$MEMBER_DB

DIVISION=pan
REG_FILE=$p2pancomparareg

# registry points to master in our prod server
MASTER_CMD=mysql-ens-plants-prod-2-ensrw
MASTER_RO=mysql-ens-plants-prod-2
details=($(${MASTER_RO} details))
MASTER_RO_PORT=${details[6]}
MASTER_DB=${DIVISION}_compara_master
MASTER_URL=$($MASTER_CMD details url)$MASTER_DB

PROD_CMD=mysql-eg-pan-prod
PROD_URL=$(${PROD_CMD} details url)ensembl_production
NCBI_URL=$(${PROD_CMD} details url)ncbi_taxonomy

STA_CMD=mysql-ens-sta-3 

OLD_ENS_VERSION=`expr $ENS_VERSION - 1`
OLD_EG_VERSION=`expr $EG_VERSION - 1`
OLD_CMD=mysql-ens-mirror-3
OLD_DB=ensembl_compara_pan_homology_${OLD_EG_VERSION}_${OLD_ENS_VERSION}
OLD_URL=$($OLD_CMD details url)$OLD_DB

## new pan compara db (final outcome, same server as core dbs to facilitate HCs)
NEW_CMD=$MASTER_CMD
NEW_DB=ensembl_compara_pan_homology_${EG_VERSION}_${ENS_VERSION}
NEW_URL=$($NEW_CMD details url)$NEW_DB

# note pan uses its own health check group
HCGROUP=ComparaPanIntegrity

PRODPATH=$ENSAPIPATH/ensembl-prodinf-core/ensembl_prodinf/
HIVEPATH=$ENSEMBL_ROOT_DIR/ensembl-hive/scripts/

COMPATH=$ENSEMBL_ROOT_DIR/ensembl-compara/scripts/pipeline/
# edit custom registry
# cp $COMPATH/production_reg_plants_conf.pl $COMPATH/production_reg_pan_conf.pl
# set there $current_release and location of core dbs ($MASTER_URL)
#
# also set therein appropriate values (ptrees won't be used yet, )
# 'compara_master' => [ 'mysql-ens-plants-prod-2', 'pan_compara_master' ],
# 'compara_curr'   => [ 'mysql-ens-plants-prod-2', 'ensembl_compara_pan_homology_44_97' ],
# 'compara_prev'   => [ 'mysql-ens-sta-3', 'ensembl_compara_pan_homology_44_97' ],
#
# homology dbs
# 'compara_members' => [ 'mysql-ens-hive-prod-2', 'bcontreras_pan_load_members_97' ],
# 'compara_ptrees'  => [ 'mysql-ens-hive-prod-2', 'ensembl_compara_pan_hom_44_97' ],
#
# finally edit sub add_compara_dbs to make sure correct user/pass are used 
MERGEREG=$COMPATH/production_reg_${DIVISION}_conf.pl

## current pan species ##############################################

$PROD_CMD $MASTER_DB -e 'select name from genome_db' | \
	tail -n +2 | sort | uniq > current_pan_species.txt

# hack for 97, due to a few bacteria & fungi sp being renamed (see updated_names.txt)
# 1) manually update their genome_db.name and genome_db.strain_name in MASTER_DB
# 2) -> current_pan_species.edited.txt

# new genebuilds / updated species names
echo oryza_sativa > updated_species.txt
echo solanum_lycopersicum >> updated_species.txt
echo physcomitrella_patens >> updated_species.txt
echo chondrus_crispus >> updated_species.txt
cat updated_names.txt >> updated_species.txt

# new species
echo marchantia_polymorpha > new_species.txt
echo brachypodium_distachyon >> new_species.txt

# get list of core dbs for Pan species
csv_species=`perl -ne 's/(\w+)/"$1",/g; print' current_pan_species.edited.txt`

standaloneJob.pl Bio::EnsEMBL::Production::Pipeline::Common::DbFactory \
	--input_id "{ 'species' => [ $csv_species ] }" --reg_conf $pancomparareg \
	-debug 1 &> current_pan_dbs.log

perl -lne 'if(/dbname" => "(\S+?)"/){ print $1 }' current_pan_dbs.log > current_pan_dbs.txt

wc current_pan_dbs.txt
#66

## copy those core dbs to our production server ###################################

TARGET_SERVER=$(${MASTER_CMD} details url)

# comment as needed
SOURCE_SERVER=$(mysql-ens-sta-1 details url)
ENDPOINT=http://ens-prod-1.ebi.ac.uk:8000/dbcopy/

SOURCE_SERVER=$(mysql-ens-sta-3 details url)
SOURCE_SERVER=$(mysql-ens-sta-4 details url)
ENDPOINT=http://eg-prod-01.ebi.ac.uk:7000/dbcopy/ 

for db in $(cat current_pan_dbs.txt);
	do $PRODPATH/db_copy_client.py --action submit --uri ${ENDPOINT} \
		--source_db_uri "${SOURCE_SERVER}${db}" --target_db_uri "${TARGET_SERVER}${db}";
done

# check dbs were copied
$MASTER_CMD -e "show databases" | grep _97_ | wc
#66

## copy cores of new species to our production server #############################

# Copy from mysql://ensro@mysql-ens-sta-3:xxx/marchantia_polymorpha_core_44_97_1 to 
# 	mysql://ensrw:xxxx@mysql-ens-plants-prod-2:xxx/marchantia_polymorpha_core_44_97_1 is successful

# Copy from mysql://ensro@mysql-ens-sta-3:xxx/brachypodium_distachyon_core_44_97_4 to 
#	mysql://ensrw:xxxx@mysql-ens-plants-prod-2:xxx/brachypodium_distachyon_core_44_97_4 is successful

$MASTER_CMD -e "show databases" | grep _97_ | wc
#68

## copy pan_compara_master to prod server ######################################

# Copy from mysql://ensro@mysql-eg-pan-prod:xxx/pan_compara_master to 
# 	mysql://ensrw:xxxx@mysql-ens-plants-prod-2:xxx/pan_compara_master is successful

# check schema and update if needed 
$MASTER_CMD $MASTER_DB -e "select meta_value from meta where meta_key='schema_version'"
# 94

# apply sequentially patches from /homes/bcontreras/devel/compara/97/ensembl-compara/sql
# some might fail due to Pan being slightly different (MMuffato)
patch_94_95_a.sql
#patch_94_95_b.sql failed
patch_94_95_c.sql
#patch_94_95_d.sql failed
patch_95_96_a.sql

## update genomes in pan_compara_master ###########################################

perl $COMPATH/update_genome.pl \
  --reg_conf $REG_FILE \
  --compara $MASTER_URL \
  --release $ENS_VERSION \
  --force 1 \
  --file_of_production_names new_species.txt

perl $COMPATH/update_genome.pl \
  --reg_conf $REG_FILE \
  --compara $MASTER_URL \
  --release $ENS_VERSION \
  --force 1 \
  --file_of_production_names updated_species.txt

perl $COMPATH/update_genome.pl \
  --reg_conf $REG_FILE \
  --compara $MASTER_URL \
  --release $ENS_VERSION \
  --force 1 \
  --file_of_production_names metadata_updated_species.txt

# get full species names as used in $MASTER_DB
$MASTER_CMD $MASTER_DB -e "select name from genome_db where last_release is NULL" | \
	tail -n +2 | grep -v -f removed_species.txt > all_species.txt

# create a new pan collection of genomes
perl $COMPATH/edit_collection.pl --reg_conf $REG_FILE --compara $MASTER_URL \
	--collection pan --file all_species.txt --new --release 97

# ... there is a difference in the software release (97) and the database release (96)...
# Stored: SpeciesSet dbID=701065 "collection-pan"', 190 genome_dbs [current] -> before excluding removed_species.txt
# Stored: SpeciesSet dbID=702192 "collection-pan"', 187 genome_dbs [current]


# if you remove some genomes you should also run
# https://github.com/Ensembl/ensembl-compara/blob/release/96/scripts/pipeline/retire_genome.pl
# as I found out later

## Gene tree and homology configuration ##############################################

# Once the species have been defined, we need to create one method_link_species_set (MLSS) for the gene tree, 
# orthology MLSSs for each pair of species with a division & paralogy MLSSs for each species within a division

# Orthologs
perl $COMPATH/create_mlss.pl \
    --method_link_type ENSEMBL_ORTHOLOGUES \
    --reg_conf $REG_FILE \
    --collection pan \
    --compara $MASTER_URL \
    --source ensembl \
    --pw --f \
    --release $ENS_VERSION \
    1> ENSEMBL_ORTHOLOGUES.out


# Paralogs
perl $COMPATH/create_mlss.pl \
    --method_link_type ENSEMBL_PARALOGUES \
    --reg_conf $REG_FILE \
    --collection pan \
    --compara $MASTER_URL \
    --source ensembl \
    --sg --f \
    --release $ENS_VERSION \
    1> ENSEMBL_PARALOGUES.out

# Trees
perl $COMPATH/create_mlss.pl \ 
    --method_link_type PROTEIN_TREES \
    --reg_conf $REG_FILE \
    --collection pan \
    --compara $MASTER_URL \
    --source ensembl \
    --name protein_tree_pan_eg${EG_VERSION} \
    --f \
    --release $ENS_VERSION \
    1> PROTEIN_TREES.out

# store MLSS id for this Compara job
mlss_id=`perl -lne 'if(/MethodLinkSpeciesSet has dbID: (\d+)/){ print $1 }' PROTEIN_TREES.out` 
echo $mlss_id

## Load Members, this queries the production server ($PROD_CMD) ############################

# not used: -curr_core_sources_locs '' -prev_core_sources_locs '' -pipeline_dir $comptmp
# note than $USER is added to db name by init script

hive_db_name=${USER}_pan_load_members_${ENS_VERSION}
hive_url=$HIVE_URL$hive_db_name

perl $HIVEPATH/init_pipeline.pl \
  Bio::EnsEMBL::Compara::PipeConfig::EBI::EG::LoadMembers_conf \
  $($HIVE_CMD details hive) \
  -collection pan \
  -division pan \
  -curr_core_registry $REG_FILE \
  -master_db $MASTER_URL \
  -reuse_member_db 0 \
  -hive_force_init 1

echo $hive_url

url="${hive_url};reconnect_when_lost=1"

beekeeper.pl -url $url -sync
runWorker.pl -url $url -reg_conf $REG_FILE
beekeeper.pl -url $url -reg_conf $REG_FILE -loop

# This will fail; open guiHive, type $hive_url, in analysis 'check_versions_match' set 'manual_ok' to 1 and reset as READY
beekeeper.pl -url $url -sync
runWorker.pl -url $url -reg_conf $REG_FILE

# Some species fail:
# i) load_genomedb_factory : due to metadata, such as assembly or strain name, not matching the values in $MASTER_DB
# ii) load_fresh_members_from_db : "MSG: start must be <= end"
# They'll need to be removed (removed_species.txt) or updated with update_genome.pl (metadata_updated_species.txt) and re-run 

## compute ProteinTrees ######################################################################

# not used: -production_db_url $PROD_URL -curr_core_registry $REG_FILE -store_goc_capacity 100  
# do_jaccard_index was added to avoid a failure when reuse_db is not set

# member db created in previous step, should be removed after completion
MEMBER_URL=${HIVE_URL}$hive_db_name

compara_db_name=ensembl_compara_pan_hom_${EG_VERSION}_${ENS_VERSION}
compara_url=$HIVE_URL$compara_db_name

perl $HIVEPATH/init_pipeline.pl \
  Bio::EnsEMBL::Compara::PipeConfig::EBI::EG::ProteinTrees_conf \
  $($HIVE_CMD details hive) \
  -division pan \
  -mlss_id $mlss_id \
  -ensembl_release $ENS_VERSION \
  -eg_release $EG_VERSION \
  -member_db $MEMBER_URL \
  -master_db $MASTER_URL \
  -ncbi_db $NCBI_URL \
  -mapping_db $OLD_URL \
  -goc_threshold 25 \
  -cdhit_identity_threshold 0.99 \
  -blastp_capacity 420 \
  -do_jaccard_index 0 \
  -hive_force_init 1

echo $compara_url

url="${compara_url};reconnect_when_lost=1"

beekeeper.pl -url $url -sync
runWorker.pl -url $url -reg_conf $REG_FILE
beekeeper.pl -url $url -reg_conf $REG_FILE -loop

# This will fail; open guiHive, type $hive_url, 
# in 'backbone_fire_clustering' and 'check_member_db_is_same_version' set 'manual_ok' to 1 and reset as READY
beekeeper.pl -url $url -sync
beekeeper.pl -url $url -reg_conf $REG_FILE -loop

# trouble-shooting

# error in analysis 'genome_member_copy' : Cannot add or update a child row: a foreign key constraint fails 
#    (ensembl_compara_pan_hom_44_97.gene_member, CONSTRAINT gene_member_ibfk_3 FOREIGN KEY (dnafrag_id) 
#    REFERENCES dnafrag (dnafrag_id)), when using table: gene_member
#
# that seems like gene_member is pointing at a dnafrag_id that does not exist.
#
# in guiHive I see its genome_db_id = 2713 (chondrus_crispus)
# then in the `bcontreras_pan_load_members_97` I do
# select count(distinct(dnafrag_id)) from gene_member where genome_db_id = 2713
#657
# select count(distinct(dnafrag_id)) from dnafrag where genome_db_id = 2713
#926
# -> add to updated_species.txt (still same error)
#
# Don't really know what's going on, genes seem to point in all cases to valid seq_region_ids (dnafrag_ids)
# I do see that coord_system for cp genes is different to the rest ?!
#
# eventually removed it as there are two other Rodophitae (Galdieria sulphuraria, Cyanidioschyzon merolae)
# -> removed_species.txt

# 1 out of 780 'blastp_unannotated_himem' analyses failed several times with diverse errors (seems to be a 2Gb_6_hour_job resource)
# NOTE: this happen to other tasks as well and after resetting all jobs were completed  
beekeeper.pl -url $url -analyses_pattern blastp_unannotated_himem -reset_failed_jobs

# it is job_id 18911
#select * from resource_usage_stats where analysis rlike 'blastp_unannotated_himem'
#select * from log_message where job_id = 18911
#'GarbageCollector: The worker died because of RUNLIMIT', 'WORKER_ERROR'
#'Can''t use an undefined value as an ARRAY reference at /nfs/panda/ensemblgenomes/development/bcontreras//compara/97/ensembl-compara/modules/Bio/EnsEMBL/Compara/Utils/Cigars.pm line 320, <BLASTTABLE> line 1470.'
#'GarbageCollector: The worker died because of UNKNOWN'
# so I now run it interactively:
bshell4 -> ebi6-283
screen -S compara1
runWorker.pl -url "mysql://ensrw:xxxx@mysql-ens-hive-prod-2:xxx/ensembl_compara_pan_hom_44_97;reconnect_when_lost=1" \
	-job_id 18911 -no_cleanup
#...
#Use of uninitialized value in hash element at /nfs/panda/ensemblgenomes/development/bcontreras//compara/97/ensembl-compara/modules/Bio/EnsEMBL/Compara/DBSQL/PeptideAlignFeatureAdaptor.pm line 327.
#Worker 5090 [ Role 5001 , blastp_unannotated_himem(53) ] Job 18911 : complete
#Worker 5090 [ Role 5001 , blastp_unannotated_himem(53) ] Having completed 1 jobs the Worker exits : JOB_LIMIT
exit

beekeeper.pl -url $url -sync
beekeeper.pl -url $url -reg_conf $REG_FILE --balance_semaphores
beekeeper.pl -url $url -reg_conf $REG_FILE --loop --sleep 0.5

# 2 out of 187 per_genome_qc analyses failed:
#genome_db_id 2714 has too many orphan genes -> cryptomonas_paramecium_gca_000194455
#genome_db_id 2788 has too many orphan genes -> giardia_lamblia
#edited ensembl-compara/modules/Bio/EnsEMBL/Compara/RunnableDB/GeneTrees/PerGenomeGroupsetQC.pm and re-run
#genome_db_id 2714 has too many orphan genes (260/466) please investigate further.
#genome_db_id 2788 has too many orphan genes (4118/7364)
#commnent out if ( !$self->_is_above_orphan_ratio( $genome_db_id, $ncbi_taxon_adaptor ) ) { and re-run

# then, clusterset_backup & backbone_fire_tree_building semaphores had to be unblocked
# NOTE: balance_semaphores might be needed in others places for the pipeline to continue

# add mapping_db a posteriori as I forgot initially

tweak_pipeline.pl -url $url -tweak "pipeline.param[mapping_db]=$OLD_URL"
beekeeper.pl -url $url --reset_done_jobs --analyses_pattern stable_id_mapping
beekeeper.pl -url $url -reg_conf $REG_FILE --loop



## call high-confidence orthologues according to GOC, WGA cover and %identity cutoffs defined at
# https://github.com/Ensembl/ensembl-compara/blob/HEAD/modules/Bio/EnsEMBL/Compara/PipeConfig/EBI/EG/HighConfidenceOrthologs_conf.pm
#
# best before merging, according to https://www.ebi.ac.uk/seqdb/confluence/display/EnsCom/Merge+the+homology+pipelines
# Mateus explained $compara_url is still a InnoDB db, which is much faster than the final db (MyISAM)
#
# Note: https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?spaceKey=EnsGen&title=Ortholog+metrics+and+confidence+levels
# says this task might struggle on a hive server, so you might want to try another one (MASTER)

highconf_db_name=${USER}_high_confidence_orthologs_${ENS_VERSION}
highconf_url=$($MASTER_CMD details url)$highconf_db_name

perl $HIVEPATH/init_pipeline.pl \
  Bio::EnsEMBL::Compara::PipeConfig::EBI::EG::HighConfidenceOrthologs_conf \
  $($MASTER_CMD details hive) \
  -compara_db $compara_url

echo $highconf_url

url="${highconf_url};reconnect_when_lost=1"

beekeeper.pl -url $url -sync
runWorker.pl -url $url -reg_conf $REG_FILE
beekeeper.pl -url $url -reg_conf $REG_FILE -loop --sleep 0.5

# increase hive capacity to 50, ave time per job 40s-1m13s-1m54s


## merging dbs ##############################################################################

# https://www.ebi.ac.uk/seqdb/confluence/display/EnsGen/Compara+Database+Merging
# see also the more comprehensive 
# https://www.ebi.ac.uk/seqdb/confluence/display/EnsCom/Creation+of+a+new+release+database

$NEW_CMD <<< "CREATE DATABASE $NEW_DB;"
$NEW_CMD $NEW_DB < $ENSEMBL_ROOT_DIR/ensembl-compara/sql/table.sql 

perl $COMPATH/populate_new_database.pl \
  --reg-conf $MERGEREG \
  --master compara_master \
  --old compara_prev \ 
  --new compara_curr \
  --intentions > populate_new_database.intentions

# takes a few minutes only
perl $COMPATH/populate_new_database.pl \
  --reg-conf $MERGEREG \
  --master compara_master \
  --old compara_prev \
  --new compara_curr > populate_new_database.out

## add homology and peptide data   

merge_db_name=${USER}_pipeline_dbmerge_${ENS_VERSION}
merge_url=$HIVE_URL$merge_db_name

perl $HIVEPATH/init_pipeline.pl \
  Bio::EnsEMBL::Compara::PipeConfig::EBI::EG::MergeDBsIntoRelease_conf \
  $($HIVE_CMD details hive) \
  -curr_rel_db $NEW_URL \
  -src_db_aliases protein_db=$compara_url \
  -src_db_aliases master_db=$MASTER_URL 

# there 3 warnings from 
# ~/devel/compara/97/ensembl-compara/modules/Bio/EnsEMBL/Compara/PipeConfig/MergeDBsIntoRelease_conf.pm

echo $merge_url

url="${merge_url};reconnect_when_lost=1"

beekeeper.pl -url $url -sync
runWorker.pl -url $url -reg_conf $REG_FILE
beekeeper.pl -url $url -reg_conf $REG_FILE -loop

## homology stats pipeline

homstats_db_name=${USER}_gene_member_homology_stats_${ENS_VERSION}
homstats_url=$HIVE_URL$homstats_db_name

perl $HIVEPATH/init_pipeline.pl \
  Bio::EnsEMBL::Compara::PipeConfig::EBI::EG::GeneMemberHomologyStats_conf \
  $($HIVE_CMD details hive) \
  -curr_rel_db $NEW_URL \
  -collection $DIVISION
 
echo $homstats_url

url="${homstats_url};reconnect_when_lost=1"

beekeeper.pl -url $url -sync
runWorker.pl -url $url -reg_conf $REG_FILE
beekeeper.pl -url $url -reg_conf $REG_FILE -loop

## delete not used method_links, if any (this is what hc ForeignKeyMasterTables checks)
$NEW_CMD $NEW_DB -e \
	'DELETE ml FROM method_link ml LEFT JOIN method_link_species_set mlss USING(method_link_id) WHERE mlss.method_link_id IS NULL;'

## check (and uniformize) NCBI taxonomy if required

$NEW_CMD -e "checksum table ${NEW_DB}.ncbi_taxa_name" # new release db 
# 2919222514
$NEW_CMD -e "checksum table ${NEW_DB}.ncbi_taxa_node"
# 3008829925

$NEW_CMD -e "checksum table ${MASTER_DB}.ncbi_taxa_name" # pan compara master
# 2919222514
$NEW_CMD -e "checksum table ${MASTER_DB}.ncbi_taxa_node"
# 3008829925

$STA_CMD -e "checksum table ncbi_taxonomy.ncbi_taxa_name" # db in staging
# 1117405935
$STA_CMD -e "checksum table ncbi_taxonomy.ncbi_taxa_node"
# 2441659164

# update these tables in $NEW_DB and $MASTER_DB with SQL

$NEW_CMD ${NEW_DB} -e "RENAME TABLE ncbi_taxa_name TO ncbi_taxa_name_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE ncbi_taxa_node TO ncbi_taxa_node_bk;"

$NEW_CMD ${MASTER_DB} -e "RENAME TABLE ncbi_taxa_name TO ncbi_taxa_name_bk;"
$NEW_CMD ${MASTER_DB} -e "RENAME TABLE ncbi_taxa_node TO ncbi_taxa_node_bk;"

# copy ncbi_taxonomy from $STA_CMD (http://eg-prod-01.ebi.ac.uk:7000/#!/copy_result/2961)

$NEW_CMD ${NEW_DB} -e "CREATE TABLE ncbi_taxa_name LIKE ncbi_taxonomy.ncbi_taxa_name;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE ncbi_taxa_node LIKE ncbi_taxonomy.ncbi_taxa_node;"

$NEW_CMD ${NEW_DB} -e "INSERT ncbi_taxa_name SELECT * FROM ncbi_taxonomy.ncbi_taxa_name;"
$NEW_CMD ${NEW_DB} -e "INSERT ncbi_taxa_node SELECT * FROM ncbi_taxonomy.ncbi_taxa_node;"

$NEW_CMD ${MASTER_DB} -e "CREATE TABLE ncbi_taxa_name LIKE ncbi_taxonomy.ncbi_taxa_name;"
$NEW_CMD ${MASTER_DB} -e "CREATE TABLE ncbi_taxa_node LIKE ncbi_taxonomy.ncbi_taxa_node;"

$NEW_CMD ${MASTER_DB} -e "INSERT ncbi_taxa_name SELECT * FROM ncbi_taxonomy.ncbi_taxa_name;"
$NEW_CMD ${MASTER_DB} -e "INSERT ncbi_taxa_node SELECT * FROM ncbi_taxonomy.ncbi_taxa_node;"



## check schema and update if needed 
$NEW_CMD $NEW_DB -e "select meta_value from meta where meta_key='schema_version'"
# 96

# apply sequentially patches from $EG_APIS/ensembl-97/ensembl-compara/sql/
# patch_96_97_a.sql

$NEW_CMD $NEW_DB < $EG_APIS/ensembl-97/ensembl-compara/sql/patch_96_97_a.sql

$NEW_CMD $NEW_DB -e "select meta_value from meta where meta_key='schema_version'"
# 97


## health checks 

# assumes core dbs are in the same server (MASTER)
# reserve RAM as some tests, such as CheckHomology, can take a long time and maybe needs lots of memory
bshell10

#ebi6-040

screen -S pan-hc

# or wherever you have cloned this repo (https://github.com/Ensembl/ensj-healthcheck)
cd /homes/bcontreras/devel/ensembl-97/ensj-healthcheck

./run-configurable-testrunner.sh -d $NEW_DB --host $MASTER_RO --port $MASTER_RO_PORT \
	-g $HCGROUP --compara_master.database=$MASTER_DB --output All > ${HCGROUP}${ENS_VERSION}.out &

# if you run this at http://eg-prod-01.ebi.ac.uk:7000/#!/hc_submit make sure you select 
# the appropriate Compara master URL: $MASTER_URL 

# NOTE: org.ensembl.healthcheck.testcase.compara.CheckSpeciesSetSizeByMethod will fail but that's harmless
# NOTE: org.ensembl.healthcheck.testcase.compara.CheckGenomeDB : fails locally but passes online, pointing to some config issue 

# check this if you have failed checks (thanks Mateus!)
# https://www.ebi.ac.uk/seqdb/confluence/pages/viewpage.action?spaceKey=EnsCom&title=Healthcheck+Knowledge+Base

# ForeignKeyMasterTables
#$NEW_CMD $NEW_DB -e 'DELETE ml FROM method_link ml LEFT JOIN method_link_species_set mlss USING(method_link_id) WHERE mlss.method_link_id IS NULL;'

# EGCheckNoTreeStableIds -> for not using mapping_db, requires re-running this analysis (see above, thanks Matthieu!)
# 60313 protein gene tree(s) lacked a stable ID. 
# 'SELECT COUNT(*) FROM gene_tree_root WHERE member_type = 'protein' AND tree_type = 'tree' AND clusterset_id='default' AND stable_id IS NULL'

# ForeignKeySpeciesTreeTables 
# species_tree_node.taxon_id 2283794 is not linked.
# species_tree_node.taxon_id 2290931 is not linked.
# 2 species_tree_node entries are not linked to ncbi_taxa_name
# SELECT species_tree_node.taxon_id FROM species_tree_node LEFT JOIN ncbi_taxa_name ON species_tree_node.taxon_id = ncbi_taxa_name.taxon_id WHERE ncbi_taxa_name.taxon_id iS NULL AND species_tree_node.taxon_id IS NOT NULL

# CheckSpeciesSetSizeByMethod 
#** PROBLEM: The MLSS 'C.sav-B. orthologues' (ID 20036) doesn't follow the name nomemclature '^([A-Z]\.?[a-z0-9]{2,3}(\.?[A-Z])?)-([A-Z]\.?[a-z0-9]{2,3}(\.?[A-Z])?) '

# ForeignKeyMLSSIdHomology  
# INFO: method_link_species_set.method_link_species_set_id 21393 is not linked.
# PROBLEM: FAILED method_link_species_set -> homology using FK method_link_species_set_id(method_link_species_set_id) relationships
# PROBLEM: FAILURE DETAILS: 567 method_link_species_set entries are not linked to homology
# SELECT method_link_species_set.method_link_species_set_id FROM method_link_species_set LEFT JOIN homology ON method_link_species_set.method_link_species_set_id = homology.method_link_species_set_id WHERE homology.method_link_species_set_id iS NULL AND method_link_species_set.method_link_id >= 201 and method_link_id < 300
#
# method_link_id > 200 is E! paralogues & orthologues
#
# select * FROM method_link_species_set where method_link_species_set_id = 20038
# select * from species_set where species_set_id = 679372
# select * from genome_db where genome_db_id = 1848
#
# which is 'synechocystis_sp_pcc_6803' one of three species in the old pan compara 
# that had to be removed in 97: synechocystis_sp_pcc_6803, rhizobium_leguminosarum_bv_viciae_3841,
# chondrus_crispus
#
# this is a problem caused by removing three species (1848,1923,2713) and not running
# https://github.com/Ensembl/ensembl-compara/blob/release/96/scripts/pipeline/retire_genome.pl

$NEW_CMD ${NEW_DB} -e "SELECT COUNT(DISTINCT species_set_id) FROM species_set WHERE genome_db_id IN (1848,1923,2713);"
#567
$NEW_CMD ${NEW_DB} -e "SELECT COUNT(*) FROM method_link_species_set WHERE species_set_id IN (SELECT species_set_id FROM species_set WHERE genome_db_id IN (1848,1923,2713));"
#567

# backup and prepare dbs before aplying fixes

# $NEW_DB
$NEW_CMD ${NEW_DB} -e "RENAME TABLE species_set TO species_set_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE species_set_header TO species_set_header_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE species_set_tag TO species_set_tag_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE method_link_species_set TO method_link_species_set_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE method_link_species_set_attr TO method_link_species_set_attr_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE method_link_species_set_tag TO method_link_species_set_tag_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE genome_db TO genome_db_bk;"
$NEW_CMD ${NEW_DB} -e "RENAME TABLE dnafrag TO dnafrag_bk;"

$NEW_CMD ${NEW_DB} -e "CREATE TABLE species_set LIKE species_set_bk;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE species_set_header LIKE species_set_header_bk;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE species_set_tag LIKE species_set_tag_bk;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE method_link_species_set LIKE method_link_species_set_bk;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE method_link_species_set_attr LIKE method_link_species_set_attr_bk;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE method_link_species_set_tag LIKE method_link_species_set_tag_bk;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE genome_db LIKE genome_db_bk;"
$NEW_CMD ${NEW_DB} -e "CREATE TABLE dnafrag LIKE dnafrag_bk;"

$NEW_CMD ${NEW_DB} -e "INSERT species_set SELECT * FROM species_set_bk;"
$NEW_CMD ${NEW_DB} -e "INSERT species_set_header SELECT * FROM species_set_header_bk;"
$NEW_CMD ${NEW_DB} -e "INSERT species_set_tag SELECT * FROM species_set_tag_bk;"
$NEW_CMD ${NEW_DB} -e "INSERT method_link_species_set SELECT * FROM method_link_species_set_bk;"
$NEW_CMD ${NEW_DB} -e "INSERT method_link_species_set_attr SELECT * FROM method_link_species_set_attr_bk;"
$NEW_CMD ${NEW_DB} -e "INSERT method_link_species_set_tag SELECT * FROM method_link_species_set_tag_bk;"
$NEW_CMD ${NEW_DB} -e "INSERT genome_db SELECT * FROM genome_db_bk;"
$NEW_CMD ${NEW_DB} -e "INSERT dnafrag SELECT * FROM dnafrag_bk;"

# $MASTER_DB
$NEW_CMD ${MASTER_DB} -e "RENAME TABLE species_set TO species_set_bk;"
$NEW_CMD ${MASTER_DB} -e "RENAME TABLE species_set_header TO species_set_header_bk;"
$NEW_CMD ${MASTER_DB} -e "RENAME TABLE species_set_tag TO species_set_tag_bk;"
$NEW_CMD ${MASTER_DB} -e "RENAME TABLE method_link_species_set TO method_link_species_set_bk;"
$NEW_CMD ${MASTER_DB} -e "RENAME TABLE method_link_species_set_attr TO method_link_species_set_attr_bk;"
$NEW_CMD ${MASTER_DB} -e "RENAME TABLE method_link_species_set_tag TO method_link_species_set_tag_bk;"

$NEW_CMD ${MASTER_DB} -e "CREATE TABLE species_set LIKE species_set_bk;"
$NEW_CMD ${MASTER_DB} -e "CREATE TABLE species_set_header LIKE species_set_header_bk;"
$NEW_CMD ${MASTER_DB} -e "CREATE TABLE species_set_tag LIKE species_set_tag_bk;"
$NEW_CMD ${MASTER_DB} -e "CREATE TABLE method_link_species_set LIKE method_link_species_set_bk;"
$NEW_CMD ${MASTER_DB} -e "CREATE TABLE method_link_species_set_attr LIKE method_link_species_set_attr_bk;"
$NEW_CMD ${MASTER_DB} -e "CREATE TABLE method_link_species_set_tag LIKE method_link_species_set_tag_bk;"

$NEW_CMD ${MASTER_DB} -e "INSERT species_set SELECT * FROM species_set_bk;"
$NEW_CMD ${MASTER_DB} -e "INSERT species_set_header SELECT * FROM species_set_header_bk;"
$NEW_CMD ${MASTER_DB} -e "INSERT species_set_tag SELECT * FROM species_set_tag_bk;"
$NEW_CMD ${MASTER_DB} -e "INSERT method_link_species_set SELECT * FROM method_link_species_set_bk;"
$NEW_CMD ${MASTER_DB} -e "INSERT method_link_species_set_attr SELECT * FROM method_link_species_set_attr_bk;"
$NEW_CMD ${MASTER_DB} -e "INSERT method_link_species_set_tag SELECT * FROM method_link_species_set_tag_bk;"

# actual fixes

# $NEW_DB
CREATE TEMPORARY TABLE species_set_tmp SELECT * FROM species_set WHERE genome_db_id IN (1848,1923,2713);
DELETE FROM species_set WHERE species_set_id IN (SELECT species_set_id FROM species_set_tmp);
DELETE FROM species_set_header WHERE species_set_id IN (SELECT species_set_id FROM species_set WHERE genome_db_id IN (1848,1923,2713));
DELETE FROM species_set_tag WHERE species_set_id IN (SELECT species_set_id FROM species_set WHERE genome_db_id IN (1848,1923,2713));
DELETE FROM method_link_species_set WHERE species_set_id IN (SELECT species_set_id FROM species_set WHERE genome_db_id IN (1848,1923,2713));
DELETE FROM method_link_species_set_attr WHERE method_link_species_set_id NOT IN (SELECT method_link_species_set_id FROM method_link_species_set);
DELETE FROM method_link_species_set_tag WHERE method_link_species_set_id NOT IN (SELECT method_link_species_set_id FROM method_link_species_set);
DELETE FROM genome_db WHERE genome_db_id IN (1848,1923,2713);
DELETE FROM dnafrag WHERE genome_db_id IN (1848,1923,2713);


# $MASTER_DB
DELETE FROM species_set WHERE genome_db_id IN (1848,1923,2713);
UPDATE species_set_header SET last_release=96 WHERE species_set_id IN (SELECT species_set_id FROM species_set WHERE genome_db_id IN (1848,1923,2713));
# species_set_tag is empty

UPDATE method_link_species_set SET last_release=96 WHERE species_set_id IN (SELECT species_set_id FROM species_set WHERE genome_db_id IN (1848,1923,2713));
# method_link_species_set_attr is empty


## remove _bk tables and hive dbs in $HIVE_CMD

## apply any pending staging patches

# https://github.com/Ensembl/staging-patches/blob/master/releases/EG44/marchantia_polymorpha_core_44_97_1.sql

UPDATE genome_db SET name = 'marchantia_polymorpha', display_name = 'Marchantia polymorpha', strain_name = 'Tak-1'
  WHERE genome_db_id=2808;

## handover http://eg-prod-01.ebi.ac.uk:7000/#!/database_handover_submit

# this entails running $HCGROUP with the master db in $PROD_CMD:

# i) backup ${MASTER_DB}_backup_20190514 in $PROD_CMD

# ii) copy $MASTER_DB from $MASTER_CMD to $PROD_CMD


